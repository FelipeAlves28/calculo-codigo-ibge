"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chalk = require("chalk");
const ErrorResponse_1 = require("./ErrorResponse");
class ErrorTreatment {
    constructor() {
        this.handlersMap = new Map;
        this.logMissingConfigurationError = false;
        this.handlerDefault = (err, req, res) => {
            console.error(chalk.red(err.stack));
            res.status(500).send(ErrorResponse_1.ErrorResponse("An unexpected error occurred during an execution"));
        };
    }
    static getInstance() {
        return this.instance;
    }
    static register(name, callBack, defaultHandle = false) {
        if (defaultHandle) {
            this.instance.handlerDefault = callBack;
        }
        else {
            this.instance.handlersMap.set(name, callBack);
        }
    }
    static getByName(handleName) {
        return this.instance.handlersMap.get(handleName);
    }
    static list() {
        return this.instance.handlersMap;
    }
    static executeHandler(err, req, res, next) {
        const callBack = this.instance.handlersMap.get(err.constructor.name);
        if (!callBack) {
            this.instance.handlerDefault(err, req, res, next);
            return;
        }
        callBack(err, req, res, next);
    }
    static countRegister() {
        return this.instance.handlersMap.size;
    }
}
ErrorTreatment.instance = new ErrorTreatment;
exports.ErrorTreatment = ErrorTreatment;
//# sourceMappingURL=ErrorTreatment.js.map